import socket;
import memory;
import time;

ListenSocket* server = null;
Socket* client = null;

exposed void aruco_pen_listen() {
	asm {
		mov r10, rbx
	}

	banjo.print_str("starting server...");

	server = socket.ls_new();
	socket.ls_listen(server, "48792");
	banjo.print_str("server started, waiting for client to connect");
	
	client = socket.ls_accept(server);
	banjo.print_str("client connected");

	asm {
		mov rbx, r10
	}
}

exposed void aruco_pen_publish(addr data, int len) {
	if(client != null) {
		socket.s_send(client, data, len);
	}
}

exposed void aruco_pen_close() {
	banjo.print_str("closing...");

	if(client != null) {
		socket.s_delete(client);
	}
	
	if(server != null) {
		socket.ls_delete(server);
	}
	
	banjo.print_str("server and client closed");
}